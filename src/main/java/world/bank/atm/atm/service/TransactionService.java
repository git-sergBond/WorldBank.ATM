package world.bank.atm.atm.service;

import lombok.RequiredArgsConstructor;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.springframework.kafka.support.DefaultKafkaHeaderMapper;
import org.springframework.kafka.support.KafkaHeaderMapper;
import org.springframework.kafka.support.KafkaHeaders;
import org.springframework.messaging.Message;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.support.SendResult;
import org.springframework.messaging.support.HeaderMapper;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Service;
import org.springframework.util.concurrent.ListenableFuture;
import org.springframework.util.concurrent.ListenableFutureCallback;
import world.bank.atm.atm.dto.TransactionDto;

import java.util.Map;
import java.util.UUID;

@Service
@RequiredArgsConstructor
public class TransactionService {

    private final KafkaTemplate<String, TransactionDto> kafkaTemplate;

    private final DefaultKafkaHeaderMapper headerMapper;

    @Value("${kafka.topics.worldBank.request}")
    private String topicWorldBankRequest;

    public void pay(TransactionDto transactionDto) {
        /*
        Message<TransactionDto> msg = MessageBuilder.withPayload(transactionDto) // TODO is this ok? Can i convert TransactionDto to Object? Is exists more better way?
                .setHeader(KafkaHeaders.MESSAGE_KEY, "msg")
                .setHeader(KafkaHeaders.TOPIC, topicWorldBankRequest)
                .setHeader(KafkaHeaders.PARTITION_ID, 0)
                .setHeader(KafkaHeaders.CORRELATION_ID, 1) // TODO how to make MessageID to CorrelationID ? (kafka_partitionId=2, id=dc28b107-2833-2fa5-6627-8d03d81044ee) is this ID is MessageId generated by broker?
                .build();

        ListenableFuture<SendResult<String, TransactionDto>> listenableFuture =  kafkaTemplate.send(msg);

        listenableFuture.addCallback(new ListenableFutureCallback<SendResult<String, TransactionDto>>() {
            @Override
            public void onSuccess(SendResult<String, TransactionDto> stringTransactionDtoSendResult) {
                System.out.println("success " + stringTransactionDtoSendResult.getRecordMetadata().offset() + "|" + stringTransactionDtoSendResult.getProducerRecord().toString());
            }

            @Override
            public void onFailure(Throwable throwable) {
                System.out.println("failure " + throwable.getMessage());
            }
        });
*/

        ProducerRecord<String, TransactionDto> record = new ProducerRecord<>(topicWorldBankRequest, "some-key", transactionDto);
        record.headers().add(KafkaHeaders.CORRELATION_ID, UUID.randomUUID().toString().getBytes());
        ///headerMapper.toHeaders(record.headers(), Map.of("key-a", "val-a")); TODO how to set header mapper
        kafkaTemplate.send(record);
    }
}
